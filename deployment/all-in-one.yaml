apiVersion: v1
kind: ServiceAccount
metadata:
  name: light-cd
  labels:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: arbhatta
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: light-cd
  labels:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: arbhatta
rules:
  - apiGroups: [ "route.openshift.io" ]
    resources: [  "routes" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
  # When APP_OPERATOR_ROUTER_MODE=openshift this permission needs to be enabled
  - apiGroups: [ "route.openshift.io" ]
    resources: [ "routes/custom-host" ]
    verbs: [ "create" ]
  # When APP_OPERATOR_ROUTER_MODE=ingress this permission needs to be enabled
  - apiGroups: [ "networking.k8s.io" ]
    resources: [  "ingresses" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
  - apiGroups: [ "" ]
    resources: [  "configmaps", "services" ]
    verbs: [ "create", "update", "get", "watch", "list", "delete" ]
  - apiGroups: [ "apps" ]
    resources: [ "deployments" ]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: light-cd
  labels:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: arbhatta
roleRef:
  kind: Role
  name: light-cd
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: light-cd
---
apiVersion: v1
kind: Service
metadata:
  name: light-cd
  labels:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: arbhatta
spec:
  type: ClusterIP
  ports:
    - port: 8080
      name: http
  selector:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: light-cd-config
data:
  APPLICATION_K8S_NAMESPACE: light-cd
  VALIDATION_TRIGGER_TAG: develop
  TEMPLATE_STORAGE_PARAM_VALUE: gp2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: light-cd
  labels:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: arbhatta
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: light-cd
      app.kubernetes.io/instance: light-cd
  template:
    metadata:
      labels:
        app.kubernetes.io/name: light-cd
        app.kubernetes.io/instance: light-cd
    spec:
      serviceAccountName: light-cd
      securityContext:
        {}
      containers:
        - name: light-cd
          securityContext:
            {}
          image: "quay.io/arbhatta/light-ci:master"
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: "/health"
              port: 8080
            initialDelaySeconds: 5
            failureThreshold: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8080
            initialDelaySeconds: 5
            failureThreshold: 5
            periodSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 2
              memory: 500Mi
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: "light-cd-config"