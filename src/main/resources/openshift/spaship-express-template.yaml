kind: "Template"
apiVersion: "v1"
metadata:
  name: "deployment-template"
labels:
  template: "deployment-template"
parameters:
  - name: "TAG"
    description: "tag of the deployment"
    value: develop
    required: true
  - name: "STORAGE_CLASS"
    description: "volume of the deployment"
    value: "gp2"
    required: false
  - name: "MONGO_REPOSITORY"
    description: "mongodb container repository"
    value: "quay.io/arbhatta/mongo:4.2.8"
    required: false
  - name: "MANAGER_REPOSITORY"
    description: "SPAship manager repository"
    value: "quay.io/spaship/spaship-manager"
  - name: "OPERATOR_REPOSITORY"
    description: "SPAship operator repository"
    value: "quay.io/arbhatta/operator"
    required: false
  - name: "UI_REPOSITORY"
    description: "SPAship UI repository"
    value: "quay.io/spaship/spaship-ui"
    required: false
  - name: "API_URL"
    description: "api url for spaship orchestrator"
    value: "localhost:3000"
    required: true
  - name: "UI_MEMORY_LIMIT"
    description: "memory limit for spaship ui"
    value: "512Mi"
    required: true
objects:
  - kind: Service
    apiVersion: v1
    metadata:
      name: mongo
      labels:
        app.kubernetes.io/name: mongo
        app.kubernetes.io/instance: mongo
        app.kubernetes.io/managed-by: spaship
    spec:
      ports:
        - protocol: TCP
          port: 27017
          targetPort: 27017
      clusterIP: None
      selector:
        app: mongo
        app.kubernetes.io/managed-by: spaship
  - kind: StatefulSet
    apiVersion: apps/v1
    metadata:
      name: mongo
      labels:
        app: mongo
        app.kubernetes.io/managed-by: spaship
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: mongo
          app.kubernetes.io/managed-by: spaship
      serviceName: mongo
      template:
        metadata:
          labels:
            app: mongo
            app.kubernetes.io/managed-by: spaship
        spec:
          terminationGracePeriodSeconds: 30
          imagePullSecrets:
            - name: regcred
          containers:
            - name: mongo
              image: "${MONGO_REPOSITORY}"
              imagePullPolicy: IfNotPresent
              command:
                - mongod
                - "--bind_ip_all"
                - "--replSet"
                - rs0
              ports:
                - name: mongo-port
                  containerPort: 27017
                  protocol: TCP
              livenessProbe:
                tcpSocket:
                  port: mongo-port
                initialDelaySeconds: 5
                periodSeconds: 10
              readinessProbe:
                tcpSocket:
                  port: mongo-port
                initialDelaySeconds: 15
                periodSeconds: 20
              volumeMounts:
                - name: mongo-volume
                  mountPath: /data/db
#            - name: mongo-sidecar
#              image: cvallance/mongo-k8s-sidecar
#              imagePullPolicy: IfNotPresent
#              env:
#                - name: MONGO_SIDECAR_POD_LABELS
#                  value: "app=mongo,app.kubernetes.io/managed-by=spaship"
      volumeClaimTemplates:
        - metadata:
            name: mongo-volume
          spec:
            accessModes: [ "ReadWriteOnce" ]
            storageClassName: "${STORAGE_CLASS}"
            resources:
              requests:
                storage: 2Gi
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: spaship-manager-config
      labels:
        app.kubernetes.io/name: spaship-manager
        app.kubernetes.io/instance: spaship-manager
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    data:
      DB_CON: mongo-0.mongo:27017
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: spaship-ui-config
      labels:
        app.kubernetes.io/name: spaship-ui
        app.kubernetes.io/instance: spaship-ui
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    data:
      REACT_APP_API_URL: ${API_URL}
  - kind: Service
    apiVersion: v1
    metadata:
      name: spaship-manager-service
      labels:
        app.kubernetes.io/name: spaship-manager
        app.kubernetes.io/instance: spaship-manager
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      type: ClusterIP
      clusterIP: None
      ports:
        - port: 3000
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: spaship-manager
        app.kubernetes.io/instance: spaship-manager
  - kind: Service
    apiVersion: v1
    metadata:
      name: spaship-ui-service
      labels:
        app.kubernetes.io/name: spaship-ui
        app.kubernetes.io/instance: spaship-ui
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      type: ClusterIP
      clusterIP: None
      ports:
        - port: 2468
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: spaship-ui
        app.kubernetes.io/instance: spaship-ui
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: spaship-manager
      labels:
        app.kubernetes.io/name: spaship-manager
        app.kubernetes.io/instance: spaship-manager
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: spaship-manager
          app.kubernetes.io/instance: spaship-manager
      template:
        metadata:
          labels:
            app.kubernetes.io/name: spaship-manager
            app.kubernetes.io/instance: spaship-manager
        spec:
          containers:
            - name: spaship-manager
              image: "${MANAGER_REPOSITORY}:${TAG}"
              envFrom:
                - configMapRef:
                    name: spaship-manager-config
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 3000
                  protocol: TCP
              livenessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 30
                periodSeconds: 10
              readinessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 30
                periodSeconds: 10
              resources:
                limits:
                  cpu: 600m
                  memory: 512Mi
                requests:
                  cpu: 300m
                  memory: 256Mi
  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v2beta1
    metadata:
      name: spaship-manager
      labels:
        app.kubernetes.io/name: spaship-manager
        app.kubernetes.io/instance: spaship-manager
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: spaship-manager
      minReplicas: 1
      maxReplicas: 1
      metrics:
        - type: Resource
          resource:
            name: cpu
            targetAverageUtilization: 80
        - type: Resource
          resource:
            name: memory
            targetAverageUtilization: 80
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: spaship-ui
      labels:
        app.kubernetes.io/name: spaship-ui
        app.kubernetes.io/instance: spaship-ui
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: spaship-ui
          app.kubernetes.io/instance: spaship-ui
      template:
        metadata:
          labels:
            app.kubernetes.io/name: spaship-ui
            app.kubernetes.io/instance: spaship-ui
        spec:
          containers:
            - name: spaship-ui
              image: "${UI_REPOSITORY}:${TAG}"
              env:
              - name: REACT_APP_API_URL
                value: ${API_URL}
              envFrom:
                - configMapRef:
                    name: spaship-ui-config
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 2468
                  protocol: TCP
              livenessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 30
                periodSeconds: 10
              readinessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 30
                periodSeconds: 10
              resources:
                limits:
                  cpu: 600m
                  memory: ${UI_MEMORY_LIMIT}
                requests:
                  cpu: 300m
                  memory: 256Mi
  - kind: HorizontalPodAutoscaler
    apiVersion: autoscaling/v2beta1
    metadata:
      name: spaship-ui
      labels:
        app.kubernetes.io/name: spaship-ui
        app.kubernetes.io/instance: spaship-ui
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: spaship-ui
      minReplicas: 1
      maxReplicas: 1
      metrics:
        - type: Resource
          resource:
            name: cpu
            targetAverageUtilization: 80
        - type: Resource
          resource:
            name: memory
            targetAverageUtilization: 80
  - kind: Service
    apiVersion: v1
    metadata:
      name: operator-service
      labels:
        app.kubernetes.io/name: operator
        app.kubernetes.io/instance: operator
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      type: ClusterIP
      clusterIP: None
      ports:
        - port: 8080
          targetPort: http
          protocol: TCP
          name: http
      selector:
        app.kubernetes.io/name: operator
        app.kubernetes.io/instance: operator
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: operator-config
      labels:
        app.kubernetes.io/name: operator
        app.kubernetes.io/instance: operator
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    data:
      OPERATOR_EVENT_BUS_ADDRESS: spa-ops-event-channel
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: operator
      labels:
        app.kubernetes.io/name: operator
        app.kubernetes.io/instance: operator
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/managed-by: spaship
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: operator
          app.kubernetes.io/instance: operator
      template:
        metadata:
          labels:
            app.kubernetes.io/name: operator
            app.kubernetes.io/instance: operator
        spec:
          serviceAccountName: light-cd
          securityContext:
            {}
          containers:
            - name: operator
              securityContext:
                {}
              image: "${OPERATOR_REPOSITORY}:${TAG}"
              envFrom:
                - configMapRef:
                    name: operator-config
              imagePullPolicy: Always
              ports:
                - name: http
                  containerPort: 8080
                  protocol: TCP
              livenessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 30
                periodSeconds: 10
              readinessProbe:
                tcpSocket:
                  port: http
                initialDelaySeconds: 30
                periodSeconds: 10
              resources:
                limits:
                  cpu: 600m
                  memory: 512Mi
                requests:
                  cpu: 300m
                  memory: 256Mi