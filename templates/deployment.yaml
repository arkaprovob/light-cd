apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.openshift.io/connects-to: >-
      [{"apiVersion":"apps/v1","kind":"Deployment","name":"spaship-manager"},{"apiVersion":"apps/v1","kind":"Deployment","name":"operator"},{"apiVersion":"apps/v1","kind":"Deployment","name":"spaship-api"},{"apiVersion":"apps/v1","kind":"StatefulSet","name":"spaship-mongo"}]
  name: light-cd
  labels:
    app.kubernetes.io/name: light-cd
    app.kubernetes.io/instance: light-cd
    app.kubernetes.io/version: "1.0.0"
    app.kubernetes.io/managed-by: arbhatta
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: light-cd
      app.kubernetes.io/instance: light-cd
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        app.kubernetes.io/name: light-cd
        app.kubernetes.io/instance: light-cd
    spec:
      serviceAccountName: light-cd
      securityContext:
        { }
      containers:
        - name: light-cd
          securityContext:
            { }
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: "/health"
              port: 8080
            initialDelaySeconds: 15
            failureThreshold: 5
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: "/health"
              port: 8080
            initialDelaySeconds: 15
            failureThreshold: 5
            periodSeconds: 30
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 2
              memory: 500Mi
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: "light-cd-config"